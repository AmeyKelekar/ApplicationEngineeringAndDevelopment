/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.GiveDirectly.FieldTeamRole;

import Business.Enterprise.Enterprise;
import Business.Organization.GiveDirectly.RecepientOrganization;
import Business.Organization.Organization;
import Business.Person.Person;
import Business.Person.Recepient;
import Business.Person.Recepient.HouseType;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Amey
 */
public class ManagePersonDataJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private Organization organization;
    private UserAccount userAccount;
    private Enterprise enterprise;
    /**
     * Creates new form ManagePersonDataJPanel
     */
    public ManagePersonDataJPanel(JPanel userJPanel, Enterprise enterprise,
            UserAccount account,Organization organization) {
        initComponents();
        this.userProcessContainer = userJPanel;
        this.enterprise = enterprise;
        this.organization = organization;
        this.userAccount = account;        
    }
    
    private void populateRegionwiseData(String region){
        DefaultTableModel model = (DefaultTableModel)censusDataJTable.getModel();
        model.setRowCount(0);
        for(Organization org : enterprise.getOrganizationDirectory().getOrganizationList()){
            if(org instanceof RecepientOrganization){
                for(Person person : org.getPersonDirectory().getPersonList()){
                    Recepient recepient = (Recepient)person;
                    if(recepient.getRegion().equals(region)){
                        Object[] object = new Object[14];
                        object[0] = recepient;
                        object[1] = recepient.getLastName();
                        object[2] = recepient.getNationalId();
                        object[3] = recepient.getCountry();
                        object[4] = recepient.getRegion();
                        object[5] = recepient.getAddress();
                        object[6] = recepient.getIncome();
                        object[7] = recepient.getGender();
                        object[8] = recepient.getLattitude();
                        object[9] = recepient.getLongitude();
                        object[10] = recepient.getHouseType();
                        object[11] = recepient.getAccountBalance();
                        object[12] = recepient.getRecipientId();
                        object[13] = recepient.getPincode();
                        model.addRow(object);
                    }
                }
            }  
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderJButtonGroup = new javax.swing.ButtonGroup();
        houseTypeJbuttonGroup = new javax.swing.ButtonGroup();
        managePersonDataJLabel = new javax.swing.JLabel();
        northRegionDataJButton = new javax.swing.JButton();
        southRegionDataJButton = new javax.swing.JButton();
        westRegionDataJButton = new javax.swing.JButton();
        eastRegionDataJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        censusDataJTable = new javax.swing.JTable();
        updateJButton = new javax.swing.JButton();
        firstNameJLabel = new javax.swing.JLabel();
        lastNameJLabel = new javax.swing.JLabel();
        nationalIdJLabel = new javax.swing.JLabel();
        countryJLabel = new javax.swing.JLabel();
        regionJLabel = new javax.swing.JLabel();
        addressJLabel = new javax.swing.JLabel();
        incomeJLabel = new javax.swing.JLabel();
        genderJLabel = new javax.swing.JLabel();
        latitudeJLabel = new javax.swing.JLabel();
        longitudeJLabel = new javax.swing.JLabel();
        firstNameJTextField = new javax.swing.JTextField();
        lastNameJTextField = new javax.swing.JTextField();
        nationalIDJTextField = new javax.swing.JTextField();
        countryJTextField = new javax.swing.JTextField();
        regionJTextField = new javax.swing.JTextField();
        addressJTextField = new javax.swing.JTextField();
        incomeJTextField = new javax.swing.JTextField();
        lattitudeJTextField = new javax.swing.JTextField();
        longitudeJTextField = new javax.swing.JTextField();
        maleJRadioButton = new javax.swing.JRadioButton();
        femaleJRadioButton = new javax.swing.JRadioButton();
        houseTypeJLabel = new javax.swing.JLabel();
        permanentJRadioButton = new javax.swing.JRadioButton();
        temporaryJRadioButton = new javax.swing.JRadioButton();
        accountBalanceJLabel = new javax.swing.JLabel();
        accountBalanceJTextField = new javax.swing.JTextField();
        recepientIdJLabel = new javax.swing.JLabel();
        recepientIdJTextField = new javax.swing.JTextField();
        pinCodeJLabel = new javax.swing.JLabel();
        pincodeJTextField = new javax.swing.JTextField();
        addRecepientValuesJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        managePersonDataJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        managePersonDataJLabel.setText("Manage Person Data");

        northRegionDataJButton.setText("North Region Data");
        northRegionDataJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                northRegionDataJButtonActionPerformed(evt);
            }
        });

        southRegionDataJButton.setText("South Region Data");
        southRegionDataJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                southRegionDataJButtonActionPerformed(evt);
            }
        });

        westRegionDataJButton.setText("West Region Data");
        westRegionDataJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                westRegionDataJButtonActionPerformed(evt);
            }
        });

        eastRegionDataJButton.setText("East Region Data");
        eastRegionDataJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eastRegionDataJButtonActionPerformed(evt);
            }
        });

        censusDataJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "National ID", "Country", "Region", "Address", "Income", "Gender", "Lattitude", "Longitude", "House Type", "Account Balkance", "Recepient Id", "Pincode"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(censusDataJTable);

        updateJButton.setText("Update");
        updateJButton.setEnabled(false);
        updateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateJButtonActionPerformed(evt);
            }
        });

        firstNameJLabel.setText("First Name");

        lastNameJLabel.setText("Last Name");

        nationalIdJLabel.setText("National ID");

        countryJLabel.setText("Country");

        regionJLabel.setText("Region");

        addressJLabel.setText("Address");

        incomeJLabel.setText("Income");

        genderJLabel.setText("Gender");

        latitudeJLabel.setText("Lattitude");

        longitudeJLabel.setText("Longitude");

        firstNameJTextField.setEnabled(false);

        lastNameJTextField.setEnabled(false);

        nationalIDJTextField.setEnabled(false);
        nationalIDJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nationalIDJTextFieldActionPerformed(evt);
            }
        });

        countryJTextField.setEnabled(false);

        regionJTextField.setEnabled(false);

        addressJTextField.setEnabled(false);

        incomeJTextField.setEnabled(false);

        lattitudeJTextField.setEnabled(false);
        lattitudeJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lattitudeJTextFieldActionPerformed(evt);
            }
        });
        lattitudeJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lattitudeJTextFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lattitudeJTextFieldKeyTyped(evt);
            }
        });

        longitudeJTextField.setEnabled(false);
        longitudeJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                longitudeJTextFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                longitudeJTextFieldKeyTyped(evt);
            }
        });

        genderJButtonGroup.add(maleJRadioButton);
        maleJRadioButton.setText("Male");
        maleJRadioButton.setEnabled(false);

        genderJButtonGroup.add(femaleJRadioButton);
        femaleJRadioButton.setText("Female");
        femaleJRadioButton.setEnabled(false);

        houseTypeJLabel.setText("House Type");

        houseTypeJbuttonGroup.add(permanentJRadioButton);
        permanentJRadioButton.setText("Permanent");
        permanentJRadioButton.setEnabled(false);

        houseTypeJbuttonGroup.add(temporaryJRadioButton);
        temporaryJRadioButton.setText("Temporaray");
        temporaryJRadioButton.setEnabled(false);

        accountBalanceJLabel.setText("Account Balance");

        accountBalanceJTextField.setEnabled(false);
        accountBalanceJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                accountBalanceJTextFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                accountBalanceJTextFieldKeyTyped(evt);
            }
        });

        recepientIdJLabel.setText("Recepient ID");

        recepientIdJTextField.setEnabled(false);

        pinCodeJLabel.setText("Pincode");

        pincodeJTextField.setEnabled(false);
        pincodeJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pincodeJTextFieldActionPerformed(evt);
            }
        });
        pincodeJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pincodeJTextFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pincodeJTextFieldKeyTyped(evt);
            }
        });

        addRecepientValuesJButton.setText("Add Recepient Pending Data");
        addRecepientValuesJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRecepientValuesJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(327, 327, 327)
                                .addComponent(managePersonDataJLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(northRegionDataJButton)
                                .addGap(96, 96, 96)
                                .addComponent(southRegionDataJButton)
                                .addGap(89, 89, 89)
                                .addComponent(westRegionDataJButton)
                                .addGap(107, 107, 107)
                                .addComponent(eastRegionDataJButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(205, 205, 205)
                                .addComponent(addRecepientValuesJButton)
                                .addGap(94, 94, 94)
                                .addComponent(updateJButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(nationalIdJLabel)
                                            .addComponent(firstNameJLabel))
                                        .addGap(104, 104, 104)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(nationalIDJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(firstNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(latitudeJLabel)
                                                    .addComponent(houseTypeJLabel)
                                                    .addComponent(incomeJLabel))
                                                .addGap(99, 99, 99))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(regionJLabel)
                                                    .addComponent(recepientIdJLabel))
                                                .addGap(94, 94, 94)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(regionJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(incomeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(permanentJRadioButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(temporaryJRadioButton))
                                            .addComponent(lattitudeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(backJButton)
                                                .addComponent(recepientIdJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(71, 71, 71)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lastNameJLabel)
                                            .addGap(118, 118, 118)
                                            .addComponent(lastNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(countryJLabel)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(countryJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(genderJLabel)
                                            .addComponent(addressJLabel)
                                            .addComponent(longitudeJLabel)
                                            .addComponent(accountBalanceJLabel)
                                            .addComponent(pinCodeJLabel))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(66, 66, 66)
                                                .addComponent(maleJRadioButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(femaleJRadioButton))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(82, 82, 82)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(addressJTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(longitudeJTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(accountBalanceJTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(pincodeJTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                        .addGap(0, 155, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(managePersonDataJLabel)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(northRegionDataJButton)
                    .addComponent(southRegionDataJButton)
                    .addComponent(westRegionDataJButton)
                    .addComponent(eastRegionDataJButton))
                .addGap(55, 55, 55)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateJButton)
                    .addComponent(addRecepientValuesJButton))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameJLabel)
                    .addComponent(firstNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameJLabel)
                    .addComponent(lastNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nationalIdJLabel)
                    .addComponent(nationalIDJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countryJLabel)
                    .addComponent(countryJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regionJLabel)
                    .addComponent(addressJLabel)
                    .addComponent(addressJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(regionJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(incomeJLabel)
                    .addComponent(incomeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maleJRadioButton)
                    .addComponent(femaleJRadioButton)
                    .addComponent(genderJLabel))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(latitudeJLabel)
                    .addComponent(lattitudeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(longitudeJLabel)
                    .addComponent(longitudeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(houseTypeJLabel)
                    .addComponent(permanentJRadioButton)
                    .addComponent(temporaryJRadioButton)
                    .addComponent(accountBalanceJLabel)
                    .addComponent(accountBalanceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recepientIdJLabel)
                    .addComponent(recepientIdJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pinCodeJLabel)
                    .addComponent(pincodeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addComponent(backJButton)
                .addContainerGap(26, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nationalIDJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nationalIDJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nationalIDJTextFieldActionPerformed

    private void lattitudeJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lattitudeJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lattitudeJTextFieldActionPerformed

    private void pincodeJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pincodeJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pincodeJTextFieldActionPerformed

    private void northRegionDataJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_northRegionDataJButtonActionPerformed
        // TODO add your handling code here:
        String north = "North";
        populateRegionwiseData(north);
    }//GEN-LAST:event_northRegionDataJButtonActionPerformed

    private void southRegionDataJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_southRegionDataJButtonActionPerformed
        // TODO add your handling code here:
        String south = "South";
        populateRegionwiseData(south);
    }//GEN-LAST:event_southRegionDataJButtonActionPerformed

    private void westRegionDataJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_westRegionDataJButtonActionPerformed
        // TODO add your handling code here:
        String west = "West";
        populateRegionwiseData(west);
    }//GEN-LAST:event_westRegionDataJButtonActionPerformed

    private void eastRegionDataJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eastRegionDataJButtonActionPerformed
        // TODO add your handling code here:
        String east = "East";
        populateRegionwiseData(east);
    }//GEN-LAST:event_eastRegionDataJButtonActionPerformed

    private void updateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = censusDataJTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row to update");
            return;
        }
        if (lattitudeJTextField.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the lattitude of the Recepient!!!");
            lattitudeJTextField.setText("");
            lattitudeJTextField.requestFocus();
        } 
        else if (longitudeJTextField.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the longitude of the Recepient!!!");
            longitudeJTextField.setText("");
            longitudeJTextField.requestFocus();
        }
        else if((maleJRadioButton.isSelected() == false) &&(femaleJRadioButton.isSelected() == false) ){
            JOptionPane.showMessageDialog(null, "Please select the gender!!!");
        } 
        else if((permanentJRadioButton.isSelected() == false) &&(temporaryJRadioButton.isSelected() == false) ){
            JOptionPane.showMessageDialog(null, "Please select the House Type!!!");
        } 
        else if (pincodeJTextField.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the pin code of the Recepient!!!");
            pincodeJTextField.setText("");
            pincodeJTextField.requestFocus();
        }
        else{
            try{
                Recepient recepient = (Recepient)censusDataJTable.getValueAt(selectedRow, 0);
                recepient.setLattitude(Integer.valueOf(lattitudeJTextField.getText()));
                recepient.setLongitude(Integer.valueOf(longitudeJTextField.getText()));
                if(maleJRadioButton.isSelected()){
                    recepient.setGender("Male");
                }
                else{
                    recepient.setGender("Female");
                }
                if(permanentJRadioButton.isSelected()){
                    recepient.setHouseType(HouseType.Permanent);
                }
                else{
                    recepient.setHouseType(HouseType.Temporary);
                }
                recepient.setPincode(Integer.parseInt(pincodeJTextField.getText()));
                populateRegionwiseData(recepient.getRegion());
                lattitudeJTextField.setEnabled(false);
                longitudeJTextField.setEnabled(false);
                pincodeJTextField.setEnabled(false);
                maleJRadioButton.setEnabled(false);
                femaleJRadioButton.setEnabled(false);
                permanentJRadioButton.setEnabled(false);
                temporaryJRadioButton.setEnabled(false);
                updateJButton.setEnabled(false);

                firstNameJTextField.setText("");
                lastNameJTextField.setText("");
                nationalIDJTextField.setText("");
                countryJTextField.setText("");
                regionJTextField.setText("");
                addressJTextField.setText("");
                accountBalanceJTextField.setText("");
                incomeJTextField.setText("");
                recepientIdJTextField.setText("");
                lattitudeJTextField.setText("");
                longitudeJTextField.setText("");
                pincodeJTextField.setText("");
                maleJRadioButton.setSelected(false);
                femaleJRadioButton.setSelected(false);
                permanentJRadioButton.setSelected(false);
                temporaryJRadioButton.setSelected(false);
            }
            catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null,
                        "Please insert valid number value!!!");
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,
                        "There's some error with database,please try again later!!");
            }
        }
    }//GEN-LAST:event_updateJButtonActionPerformed

    private void addRecepientValuesJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRecepientValuesJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = censusDataJTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row to add additional data");
            return;
        }
        lattitudeJTextField.setEnabled(true);
        longitudeJTextField.setEnabled(true);
        pincodeJTextField.setEnabled(true);
        maleJRadioButton.setEnabled(true);
        femaleJRadioButton.setEnabled(true);
        permanentJRadioButton.setEnabled(true);
        temporaryJRadioButton.setEnabled(true);
        updateJButton.setEnabled(true);
        
        Recepient recepient = (Recepient)censusDataJTable.getValueAt(selectedRow, 0);
        firstNameJTextField.setText(recepient.getFirstName());
        lastNameJTextField.setText(recepient.getLastName());
        nationalIDJTextField.setText(recepient.getNationalId());
        countryJTextField.setText(recepient.getCountry());
        regionJTextField.setText(recepient.getRegion());
        addressJTextField.setText(recepient.getAddress());
        accountBalanceJTextField.setText(String.valueOf(recepient.getAccountBalance()));
        incomeJTextField.setText(String.valueOf(recepient.getIncome()));
        recepientIdJTextField.setText(recepient.getRecipientId());
        longitudeJTextField.setText(String.valueOf(recepient.getLongitude()));
        lattitudeJTextField.setText(String.valueOf(recepient.getLattitude()));
        pincodeJTextField.setText(String.valueOf(recepient.getPincode()));
        if(recepient.getGender().equals("Male")){
            maleJRadioButton.setSelected(true);
        }
        if(recepient.getGender().equals("Female")){
            femaleJRadioButton.setSelected(true);
        }
        if(recepient.getHouseType().equals(HouseType.Permanent)){
            permanentJRadioButton.setSelected(true);
        }
        if(recepient.getHouseType().equals(HouseType.Temporary)){
            temporaryJRadioButton.setSelected(true);
        }
    }//GEN-LAST:event_addRecepientValuesJButtonActionPerformed

    private void longitudeJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_longitudeJTextFieldKeyTyped
        // TODO add your handling code here:
        char character = evt.getKeyChar();
        int length = longitudeJTextField.getText().length();
        if(!(Character.isDigit(character) || character == KeyEvent.VK_BACK_SPACE 
                || character == KeyEvent.VK_DELETE)|| length >= 3){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_longitudeJTextFieldKeyTyped

    private void lattitudeJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lattitudeJTextFieldKeyTyped
        // TODO add your handling code here:
        char character = evt.getKeyChar();
        int length = lattitudeJTextField.getText().length();
        if(!(Character.isDigit(character) || character == KeyEvent.VK_BACK_SPACE 
                || character == KeyEvent.VK_DELETE) || length >= 3){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_lattitudeJTextFieldKeyTyped

    private void accountBalanceJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_accountBalanceJTextFieldKeyTyped
        // TODO add your handling code here:
        char character = evt.getKeyChar();
        if(!(Character.isDigit(character) || character == KeyEvent.VK_BACK_SPACE || character == KeyEvent.VK_DELETE)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_accountBalanceJTextFieldKeyTyped

    private void pincodeJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pincodeJTextFieldKeyTyped
        // TODO add your handling code here:
        char character = evt.getKeyChar();
        int length = pincodeJTextField.getText().length();
        if(!(Character.isDigit(character) || character == KeyEvent.VK_BACK_SPACE 
                || character == KeyEvent.VK_DELETE) || length >= 5){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_pincodeJTextFieldKeyTyped

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void accountBalanceJTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_accountBalanceJTextFieldKeyPressed
        // TODO add your handling code here:
        if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_C) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You cannot copy code from this field!!!");
        } 
        else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_X) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You cannot cut code from this field!!!");
        } 
        else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_V) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You cannot paste code into this field!!!");
        }
    }//GEN-LAST:event_accountBalanceJTextFieldKeyPressed

    private void pincodeJTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pincodeJTextFieldKeyPressed
        // TODO add your handling code here:
        if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_C) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You cannot copy code from this field!!!");
        } 
        else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_X) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You cannot cut code from this field!!!");
        } 
        else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_V) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You cannot paste code into this field!!!");
        }
    }//GEN-LAST:event_pincodeJTextFieldKeyPressed

    private void lattitudeJTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lattitudeJTextFieldKeyPressed
        // TODO add your handling code here:
        if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_C) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You cannot copy code from this field!!!");
        } 
        else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_X) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You cannot cut code from this field!!!");
        } 
        else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_V) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You cannot paste code into this field!!!");
        }
    }//GEN-LAST:event_lattitudeJTextFieldKeyPressed

    private void longitudeJTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_longitudeJTextFieldKeyPressed
        // TODO add your handling code here:
        if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_C) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You cannot copy code from this field!!!");
        } 
        else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_X) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You cannot cut code from this field!!!");
        } 
        else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_V) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "You cannot paste code into this field!!!");
        }
    }//GEN-LAST:event_longitudeJTextFieldKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accountBalanceJLabel;
    private javax.swing.JTextField accountBalanceJTextField;
    private javax.swing.JButton addRecepientValuesJButton;
    private javax.swing.JLabel addressJLabel;
    private javax.swing.JTextField addressJTextField;
    private javax.swing.JButton backJButton;
    private javax.swing.JTable censusDataJTable;
    private javax.swing.JLabel countryJLabel;
    private javax.swing.JTextField countryJTextField;
    private javax.swing.JButton eastRegionDataJButton;
    private javax.swing.JRadioButton femaleJRadioButton;
    private javax.swing.JLabel firstNameJLabel;
    private javax.swing.JTextField firstNameJTextField;
    private javax.swing.ButtonGroup genderJButtonGroup;
    private javax.swing.JLabel genderJLabel;
    private javax.swing.JLabel houseTypeJLabel;
    private javax.swing.ButtonGroup houseTypeJbuttonGroup;
    private javax.swing.JLabel incomeJLabel;
    private javax.swing.JTextField incomeJTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastNameJLabel;
    private javax.swing.JTextField lastNameJTextField;
    private javax.swing.JLabel latitudeJLabel;
    private javax.swing.JTextField lattitudeJTextField;
    private javax.swing.JLabel longitudeJLabel;
    private javax.swing.JTextField longitudeJTextField;
    private javax.swing.JRadioButton maleJRadioButton;
    private javax.swing.JLabel managePersonDataJLabel;
    private javax.swing.JTextField nationalIDJTextField;
    private javax.swing.JLabel nationalIdJLabel;
    private javax.swing.JButton northRegionDataJButton;
    private javax.swing.JRadioButton permanentJRadioButton;
    private javax.swing.JLabel pinCodeJLabel;
    private javax.swing.JTextField pincodeJTextField;
    private javax.swing.JLabel recepientIdJLabel;
    private javax.swing.JTextField recepientIdJTextField;
    private javax.swing.JLabel regionJLabel;
    private javax.swing.JTextField regionJTextField;
    private javax.swing.JButton southRegionDataJButton;
    private javax.swing.JRadioButton temporaryJRadioButton;
    private javax.swing.JButton updateJButton;
    private javax.swing.JButton westRegionDataJButton;
    // End of variables declaration//GEN-END:variables
}
