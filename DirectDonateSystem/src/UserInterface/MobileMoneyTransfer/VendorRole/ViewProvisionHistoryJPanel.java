/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.MobileMoneyTransfer.VendorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.GiveDirectlyEnterprise;
import Business.Network.Network;
import Business.Organization.GiveDirectly.RecepientOrganization;
import Business.Organization.Organization;
import Business.Person.Person;
import Business.Person.Recepient;
import Business.Person.Vendor;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Amey
 */
public class ViewProvisionHistoryJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private EcoSystem system;
    /**
     * Creates new form ViewProvisionHistoryJPanel
     */
    public ViewProvisionHistoryJPanel(JPanel userJPanel,UserAccount account,EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userJPanel;
        this.userAccount = account;
        this.system = ecoSystem;
        populateMoneyProvisionDetails();
    }
    
    private void populateMoneyProvisionDetails(){
        DefaultTableModel model = (DefaultTableModel)provisionHistoryJTable.getModel();
        model.setRowCount(0);
        Vendor vendor = (Vendor)userAccount.getPerson();
        for(Network network:system.getNetworkList()){
            System.out.println("Network1: "+network);
            for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList()){
                if(enterprise instanceof GiveDirectlyEnterprise){
                    System.out.println("Enterprise is: "+enterprise);
                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList()){
                        if(organization instanceof RecepientOrganization){
                            System.out.println("Organization: "+organization);
                            for(Person person:organization.getPersonDirectory().getPersonList()){
                                Recepient recepient = (Recepient)person;
                                if(vendor.getVendorId().equals(recepient.getVendorId())){
                                    Object[] object = new Object[5];
                                    object[0] = recepient.getFirstName();
                                    object[1] = recepient.getRecipientId();
                                    object[2] = recepient.getAmountRecevied();
                                    object[3] = recepient.getAmountConsumed();
                                    object[4] = recepient.getAmountRecevied()-recepient.getAmountConsumed();
                                    model.addRow(object);
                                }
                            }
                        }
                    }         
                }         
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewProvisionHistoryJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        provisionHistoryJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();

        viewProvisionHistoryJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        viewProvisionHistoryJLabel.setText("View Provision History");

        provisionHistoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Recepient Name", "Recepient ID", "Amount Donated", "Amount Collected", "Amount Remaining"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(provisionHistoryJTable);

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(391, 391, 391)
                .addComponent(viewProvisionHistoryJLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(202, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addGap(433, 433, 433))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(141, 141, 141))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(viewProvisionHistoryJLabel)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(backJButton)
                .addContainerGap(293, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable provisionHistoryJTable;
    private javax.swing.JLabel viewProvisionHistoryJLabel;
    // End of variables declaration//GEN-END:variables
}
