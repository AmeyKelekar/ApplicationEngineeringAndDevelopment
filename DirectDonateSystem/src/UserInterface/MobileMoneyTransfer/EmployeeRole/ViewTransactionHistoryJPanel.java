/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.MobileMoneyTransfer.EmployeeRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.MobileMoneyTransferEnterprise;
import Business.MobileMoneyTransfer.MobileMoneyTransferTransaction;
import Business.Network.Network;
import Business.Organization.MobileMoneyTransfer.
        MobileMoneyTransferEmployeeOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Amey
 */
public class ViewTransactionHistoryJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount userAccount;
    /**
     * Creates new form ViewTransactionHistoryJPanel
     */
    public ViewTransactionHistoryJPanel(JPanel userJPanel,
            EcoSystem ecoSystem,UserAccount account) 
    {
        initComponents();
        this.userProcessContainer = userJPanel;
        this.system = ecoSystem;
        this.userAccount = account;
        populateTransactionHistoryTable();
    }
    
    private void populateTransactionHistoryTable(){
        DefaultTableModel model = 
                (DefaultTableModel)transactionHistoryJTable.getModel();
        model.setRowCount(0);

        for(Network network:system.getNetworkList()){
            System.out.println("View History Network loop:"+network);
            for(Enterprise enterprise:
                    network.getEnterpriseDirectory().getEnterpriseList()){
                System.out.println("View History Enterprise Loop:"+enterprise);
                if(enterprise instanceof  MobileMoneyTransferEnterprise)
                {
                    for(Organization organization:
                    enterprise.getOrganizationDirectory().getOrganizationList())
                    {
                        System.out.println("View History Organization loop:"
                                +organization);
                        if(organization instanceof 
                                MobileMoneyTransferEmployeeOrganization)
                        {
                            System.out.println
                            ("View History Organization if condition:"
                                    +organization);
                            MobileMoneyTransferEmployeeOrganization 
                            mobileMoneyTransferEmployeeOrganization = 
                            (MobileMoneyTransferEmployeeOrganization)
                                    organization;
                            for(MobileMoneyTransferTransaction 
                                mobileMoneyTransferTransaction:
                                mobileMoneyTransferEmployeeOrganization.
                                getMobileMoneyTransferTransactionList().
                                getMobileMoneyTransferTransactionList())
                            {
                                System.out.println("Inside transaction loop");
                                Object object[] = new Object[5];
                                object[0] = mobileMoneyTransferTransaction.
                                        getRecepient().getFirstName();
                                object[1] = mobileMoneyTransferTransaction.
                                        getRecepient().getRecipientId();
                                object[2] = mobileMoneyTransferTransaction.
                                        getTransferAmount();
                                object[3] = mobileMoneyTransferTransaction.
                                        getTransactionId();
                                object[4] = mobileMoneyTransferTransaction.
                                        getSender();
                                model.addRow(object);
                            }
                        }
                    }
                }
            }
        }       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewTransactionHistoryJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        transactionHistoryJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();

        viewTransactionHistoryJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        viewTransactionHistoryJLabel.setText("View Transaction History");

        transactionHistoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Recepient", "Recepient Id", "Amount Transferred", "Transaction ID", "Sender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(transactionHistoryJTable);

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(339, 339, 339)
                        .addComponent(viewTransactionHistoryJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 898, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(414, 414, 414)
                        .addComponent(backJButton)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(viewTransactionHistoryJLabel)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(backJButton)
                .addContainerGap(326, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable transactionHistoryJTable;
    private javax.swing.JLabel viewTransactionHistoryJLabel;
    // End of variables declaration//GEN-END:variables
}
