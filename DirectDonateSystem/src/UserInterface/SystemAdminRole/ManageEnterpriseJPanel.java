/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdminRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Amey
 */
public class ManageEnterpriseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    public ManageEnterpriseJPanel(JPanel userJPanel,EcoSystem system) {
        initComponents();
        this.userProcessContainer = userJPanel;
        this.system = system;
        populateEnterpriseTable();
        populateComboBox();
    }
    
    private void populateEnterpriseTable(){
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();
        model.setRowCount(0);
        
        for(Network network : system.getNetworkList()){
            for(Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList()){
                Object[] row = new Object[3];
                row[0] = enterprise.getName();
                row[1] = network.getName();
                row[2] = enterprise.getEnterpriseType().getValue();
                model.addRow(row); 
            }   
        }
    }
    
    private boolean checkForUniqueEnterpriseTypeInNetwork(String name,Enterprise.EnterpriseType type)
    {
        for(Network network: system.getNetworkList())
        {
            for(Enterprise tempEnterprise: network.getEnterpriseDirectory().getEnterpriseList())
            {
                if(tempEnterprise.getEnterpriseType() == type && network.getName().equals(name)){
                   return true; 
                }
            }
        }
        return false;
    }
    
//    private boolean checkForUniqueEnterpriseNameInNetwork(String name,String enterpriseName)
//    {
//        for(Network network: system.getNetworkList())
//        {
//            for(Enterprise tempEnterprise: network.getEnterpriseDirectory().getEnterpriseList())
//            {
//                if(tempEnterprise.getName() == enterpriseName && network.getName().equals(name)){
//                   return true; 
//                }
//            }
//        }
//        return false;
//    }
    
    private void populateComboBox(){
        networkJComboBox.removeAllItems();
        enterpriseJComboBox.removeAllItems();
        for(Network network: system.getNetworkList()){
            networkJComboBox.addItem(network);
        }
        for(Enterprise.EnterpriseType type:Enterprise.EnterpriseType.values()){
            enterpriseJComboBox.addItem(type);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        networkJLabel = new javax.swing.JLabel();
        enterpriseTypeJLabel = new javax.swing.JLabel();
        enterpriseNameJLabel = new javax.swing.JLabel();
        enterpriseNameJTextField = new javax.swing.JTextField();
        enterpriseJComboBox = new javax.swing.JComboBox();
        networkJComboBox = new javax.swing.JComboBox();
        backJButton = new javax.swing.JButton();
        submitJButton = new javax.swing.JButton();
        manageEnterpriseJLabel = new javax.swing.JLabel();

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Name", "Network", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        networkJLabel.setText("Network");

        enterpriseTypeJLabel.setText("Enterprise Type");

        enterpriseNameJLabel.setText("Enterprise Name");

        backJButton.setText("<< back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        manageEnterpriseJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        manageEnterpriseJLabel.setText("Manage Enterprise");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enterpriseNameJLabel)
                            .addComponent(enterpriseTypeJLabel)
                            .addComponent(networkJLabel))
                        .addGap(151, 151, 151)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(networkJComboBox, 0, 160, Short.MAX_VALUE)
                            .addComponent(enterpriseJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(enterpriseNameJTextField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(335, 335, 335)
                        .addComponent(backJButton)
                        .addGap(64, 64, 64)
                        .addComponent(submitJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(363, 363, 363)
                        .addComponent(manageEnterpriseJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(220, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(manageEnterpriseJLabel)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(networkJLabel)
                    .addComponent(networkJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterpriseTypeJLabel)
                    .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterpriseNameJLabel)
                    .addComponent(enterpriseNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(submitJButton))
                .addGap(76, 76, 76))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        // TODO add your handling code here:
        int totalRow = enterpriseJTable.getRowCount();
        Network network = (Network) networkJComboBox.getSelectedItem();
        Enterprise.EnterpriseType type = (Enterprise.EnterpriseType) enterpriseJComboBox.getSelectedItem();
        if(network == null || type == null){
            JOptionPane.showMessageDialog(null, "Invalid Input");
            return;
        }
        if (enterpriseNameJTextField.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the Enterprise Name!!!");
            enterpriseNameJTextField.setText("");
            enterpriseNameJTextField.requestFocus();
        }
        else{
            if(checkForUniqueEnterpriseTypeInNetwork(network.getName(),type)){
                JOptionPane.showMessageDialog(null, "Enterprise Type Already present in the selected Network!!!");
                return;
            }
//            if(checkForUniqueEnterpriseNameInNetwork(network.getName(),enterpriseNameJTextField.getText().trim())){
//                JOptionPane.showMessageDialog(null, "Enterprise Name Already present in the selected Network!!!");
//                return;
//            }
            for(int i=0; i< totalRow;i++){
                if(enterpriseJTable.getValueAt(i,0).equals(enterpriseNameJTextField.getText().trim().toUpperCase()) 
                        && enterpriseJTable.getValueAt(i,1).equals(network.getName()) ){
                    JOptionPane.showMessageDialog(null,"Enterprise Name Already present in the selected Network!!!");
                    enterpriseNameJTextField.setText("");
                    enterpriseNameJTextField.requestFocus();
                    return;
                }
            }
            String name =enterpriseNameJTextField.getText().trim().toUpperCase();
            Enterprise enterprise = network.getEnterpriseDirectory().createAndAddEnterprise(name, type);
            populateEnterpriseTable();
        }
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JLabel enterpriseNameJLabel;
    private javax.swing.JTextField enterpriseNameJTextField;
    private javax.swing.JLabel enterpriseTypeJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel manageEnterpriseJLabel;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JLabel networkJLabel;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
